import csv 
import random 
import telegram 
from telegram import ParseMode 
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters 
 
# –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ 
TOKEN = '5026688528:AAEL4kIDJ922BuC40X2ggwI9SMBCSuXJsso' 


# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∏–∑ CSV-—Ñ–∞–π–ª–∞ 
def load_questions(filename): 
    questions = [] 
    with open(filename, newline='') as csvfile: 
        reader = csv.reader(csvfile) 
        for row in reader: 
            question, *answers = row 
            questions.append((question, answers)) 
    return questions 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start 
def start(update, context): 
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–∞–ø–∏—à–∏ /test, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç.') 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /test 
def test(update, context): 
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ questions.csv 
    questions = load_questions('questions.csv') 
    
    # –°–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞–µ–º 5 –≤–æ–ø—Ä–æ—Å–æ–≤ 
    test_questions = random.sample(questions, 5) 
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ 
    context.user_data['test_questions'] = test_questions 
    context.user_data['score'] = 0 
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å 
    update.message.reply_text('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç. –í–æ–ø—Ä–æ—Å 1:\n' + test_questions[0][0]) 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã 
def answer(update, context): 
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
    user_answer = update.message.text 
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ 
    test_questions = context.user_data['test_questions'] 
    question, answers = test_questions[context.user_data['score']] 
    correct_answer = answers[0] 
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç 
    if user_answer == correct_answer: 
        context.user_data['score'] += 1 
        answer_message = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üü¢' 
    else: 
        answer_message = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! üî¥' 
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º 
    update.message.reply_text(f'{answer_message} –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}', parse_mode=ParseMode.HTML) 
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å 
    if context.user_data['score'] < len(test_questions): 
        question, answers = test_questions[context.user_data['score']] 
        update.message.reply_text(f'–í–æ–ø—Ä–æ—Å {context.user_data["score"] + 1}:\n{question}') 
    # –ï—Å–ª–∏ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–¥–∞–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è 
    else: 
        update.message.reply_text(f'–¢–µ—Å—Ç –æ–∫–æ–Ω—á–µ–Ω. –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {context.user_data["score"]}/{len(test_questions)}')
